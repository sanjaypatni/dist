{"version":3,"file":"src_app_view-clip_view-clip_module_ts.js","mappings":"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","sources":["./src/app/models/clip.ts","./src/app/services/clips.service.ts","./src/app/view-clip/view-clip-routing.module.ts","./src/app/view-clip/view-clip.module.ts","./src/app/view-clip/view-clip.page.ts"],"sourcesContent":["export class Clip {\n    id: string;\n    title: string;\n    description: string;\n    type: string = \"\";\n    application: string;\n    login: string;\n    link: string;\n    rating: number = 0;\n    srating: String;\n    thumbnail: string;\n    showAudio : boolean;\n    showRecord : boolean;\n    showVideo : boolean;\n    showImage : boolean;\n    showYTube : boolean;\n    showText : boolean;\n    showPdf : boolean;\n    showContact : boolean;\n    showTodo : boolean;\n    showChat : boolean;\n    showAppt : boolean;\n    showLink : boolean;\n    showItem : boolean;\n    srating1 : boolean;\n    srating2 : boolean;\n    srating3 : boolean;\n    srating4 : boolean;\n    srating5 : boolean;\n    startDate: string;\n    endDate: string;\n    taskStatus : string;\n    email : string;\n    phone: string;\n    fileName: string;\n    disabled : boolean = false;\n    ilink : string;\n    archine : number = 0;\n    price : number = 0.0;\n    preview : boolean = false;\n    jwt : string;\n    base64Bytes : any = \"\";\n    fileType : string = \"\";\n    base64String : any = \"data:\" + this.type + \"/\" + this.fileType + \";base64,\" + this.base64Bytes;\n    active : string = \"panel\";\n    playType : string = \"playclip\";\n  }\n","import { Injectable } from '@angular/core';\nimport { Clip } from '../models/clip';\nimport { Content } from '../models/content';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Api } from '../api';\nimport { SigninService } from './sign-in.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClipsService {\n  clip : Clip = new Clip();\n  status : string;\n  constructor(private http: HttpClient, private api : Api, private signInService : SigninService) { \n  \tconsole.log(this.signInService.jwt.token);\n  }\n\n  add(content) {\n    this.clip.login= this.signInService.user.login;\n    this.clip.link = content.link;\n    this.clip.type = content.type;\n    this.clip.title = content.title;\n    this.createClip(this.clip).subscribe((response) => {\n    });\n  }\n\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n   'Content-Type': 'application/json',\n  })\n }\n // Handle API errors\n\n\n  // Get clips data\n  getList(): Observable<Clip> {\n      return this.http\n      .get<Clip>(this.api.clip +  \"?user=\" + this.signInService.user.login + \"&application=playclips\", this.signInService.httpOptionsAuth)\n    .pipe(\n    retry(2),\n    catchError(this.handleError));\n   }\n\n  // Get clips data\n  getClipsByType(type): Observable<Clip> {\n      return this.http\n      .get<Clip>(this.api.clipType +  \"?user=\" + this.signInService.user.login + \"&type=\" + type + \"&application=playclips\", this.signInService.httpOptionsAuth)\n    .pipe(\n    retry(2),\n    catchError(this.handleError));\n   }\n   \n\n   // Create a new item\n  createClip(clip): Observable<Clip> {\n    console.log(\"post\");\n    this.clip.jwt = this.signInService.jwt.token;\n    console.log(this.signInService.jwt.token);\n    return this.http\n      .post<Clip>(this.api.clip + \"?application=playclips\", JSON.stringify(clip), this.signInService.httpOptionsAuth)\n    .pipe(\n    retry(2),\n    catchError(this.handleError));\n    }\n    updateClip(id, clip): Observable<Clip> {\n    return this.http.put<Clip>(this.api.clip + \"/\" +  id +  \"?application=playclips\" , JSON.stringify(clip), this.signInService.httpOptionsAuth)\n    .pipe(\n    retry(2),\n    catchError(this.handleError));\n    }\n\n     // Create a new item\n\n    getClip(id: string) : Observable<Clip> {\n\t\t\treturn  this.http.get<Clip>(this.api.clip + \"/\" + id + \"?jwt=\" + this.signInService.jwt.token)\n\t\t\t.pipe(\n\t\t\t\t\tretry(2),\n\t\t\t\t\tcatchError(this.handleError));\n\t\t}\n\n    deleteClip(id: string): void { \n      this.http.delete(this.api.clip + \"/\" + id , this.signInService.httpOptionsAuth)\n      .subscribe(() => this.status = 'Delete successful');\n    }\n\n    emailClip(email: string, link : string) : Observable<String> {\n                        \n                        return this.http.get<String>(this.api.email + \"?email=\" + email+\"&id=\" + link + \"&login=\" + this.signInService.user.login)\n\t\t\t.pipe(\n\t\t\t\t\tretry(2),\n\t\t\t\t\tcatchError(this.handleError));\n\t}\n\t\t\t\t\n    textClip(phone: string, link : string) : Observable<String> {\n                        return this.http.get<String>(this.api.text + \"?phone=\" + phone+\"&id=\" + link + \"&login=\" + this.signInService.user.login)\n\t\t\t.pipe(\n\t\t\t\t\tretry(2),\n\t\t\t\t\tcatchError(this.handleError));\n     }\n\n\n\n   // Handle API errors\n  handleError(error: HttpErrorResponse) {\n  if (error.error instanceof ErrorEvent) {\n  // A client-side or network error occurred. Handle it accordingly.\n     console.error('An error occurred:', error.error.message);\n  } else {\n  // The backend returned an unsuccessful response code.\n  // The response body may contain clues as to what went wrong,\n    console.error( `Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n  }\n  // return an observable with a user-facing error message\n  return throwError( 'Something bad happened; please try again later.');\n }; \n  purge(): void { \n   this.http.get(this.api.purgeclip, this.signInService.httpOptionsAuth )\n     .subscribe(() => this.status = 'Purge successful');\n  }\n  archive(clip) : Observable<Clip> {\n\treturn\tthis.http.post<Clip>(this.api.archiveclip , JSON.stringify(clip), this.signInService.httpOptionsAuth).pipe(\n\t\t\t\t\tretry(2),\n\t\t\t\t\tcatchError(this.handleError));\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ViewClipPage } from './view-clip.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ViewClipPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ViewClipPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ViewClipPageRoutingModule } from './view-clip-routing.module';\n\nimport { ViewClipPage } from './view-clip.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ViewClipPageRoutingModule\n  ],\n  declarations: [ViewClipPage]\n})\nexport class ViewClipPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Clip } from '../models/clip';\nimport { ClipsService } from '../services/clips.service';\n\n@Component({\n  selector: 'app-view-clip',\n  templateUrl: './view-clip.page.html',\n  styleUrls: ['./view-clip.page.scss'],\n})\nexport class ViewClipPage implements OnInit {\n  href: string = \"\";\n  item: Clip = new Clip();\n\n  constructor(private router: Router, private clipService: ClipsService) { this.ngOnInit(); }\n\n  ngOnInit() {\n    this.href = this.router.url;\n    var index = this.href.lastIndexOf(\"/\");\n    var id = this.href.substring(index + 1);\n    console.log(id);\n    this.clipService.getClip(id).subscribe(response => {\n      console.log(response);\n      this.item = response;\n    });\n\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}